/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_CompactionOptionsUniversal */

#ifndef _Included_org_rocksdb_CompactionOptionsUniversal
#define _Included_org_rocksdb_CompactionOptionsUniversal
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    newCompactionOptionsUniversal
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_CompactionOptionsUniversal_newCompactionOptionsUniversal
  (JNIEnv *, jclass);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    disposeInternalJni
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_disposeInternalJni
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setSizeRatio
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setSizeRatio
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    sizeRatio
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_CompactionOptionsUniversal_sizeRatio
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setMinMergeWidth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setMinMergeWidth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    minMergeWidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_CompactionOptionsUniversal_minMergeWidth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setMaxMergeWidth
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setMaxMergeWidth
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    maxMergeWidth
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_CompactionOptionsUniversal_maxMergeWidth
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setMaxSizeAmplificationPercent
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setMaxSizeAmplificationPercent
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    maxSizeAmplificationPercent
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_CompactionOptionsUniversal_maxSizeAmplificationPercent
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setCompressionSizePercent
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setCompressionSizePercent
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    compressionSizePercent
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_CompactionOptionsUniversal_compressionSizePercent
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setStopStyle
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setStopStyle
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    stopStyle
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_rocksdb_CompactionOptionsUniversal_stopStyle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    setAllowTrivialMove
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptionsUniversal_setAllowTrivialMove
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_CompactionOptionsUniversal
 * Method:    allowTrivialMove
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_CompactionOptionsUniversal_allowTrivialMove
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
