/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_PerfContext */

#ifndef _Included_org_rocksdb_PerfContext
#define _Included_org_rocksdb_PerfContext
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_PerfContext
 * Method:    reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_PerfContext_reset
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getUserKeyComparisonCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getUserKeyComparisonCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockCacheHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockCacheHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockReadCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockReadCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockReadByte
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockReadByte
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockReadTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockReadTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockReadCpuTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockReadCpuTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockCacheIndexHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockCacheIndexHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockCacheStandaloneHandleCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockCacheStandaloneHandleCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockCacheRealHandleCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockCacheRealHandleCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getIndexBlockReadCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getIndexBlockReadCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockCacheFilterHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockCacheFilterHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getFilterBlockReadCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getFilterBlockReadCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getCompressionDictBlockReadCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getCompressionDictBlockReadCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSecondaryCacheHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSecondaryCacheHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getCompressedSecCacheInsertRealCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getCompressedSecCacheInsertRealCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getCompressedSecCacheInsertDummyCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getCompressedSecCacheInsertDummyCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getCompressedSecCacheUncompressedBytes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getCompressedSecCacheUncompressedBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getCompressedSecCacheCompressedBytes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getCompressedSecCacheCompressedBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockChecksumTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockChecksumTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockDecompressTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockDecompressTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getReadBytes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getReadBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getMultigetReadBytes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getMultigetReadBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getIterReadBytes
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getIterReadBytes
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlobCacheHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlobCacheHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlobReadCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlobReadCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlobReadByte
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlobReadByte
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlobReadTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlobReadTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlobChecksumTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlobChecksumTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlobDecompressTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlobDecompressTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getInternalKeySkippedCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getInternalKeySkippedCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getInternalDeleteSkippedCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getInternalDeleteSkippedCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getInternalRecentSkippedCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getInternalRecentSkippedCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getInternalMergeCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getInternalMergeCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getInternalMergePointLookupCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getInternalMergePointLookupCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getInternalRangeDelReseekCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getInternalRangeDelReseekCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSnapshotTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSnapshotTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getFromMemtableTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getFromMemtableTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getFromMemtableCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getFromMemtableCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getPostProcessTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getPostProcessTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getFromOutputFilesTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getFromOutputFilesTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekOnMemtableTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekOnMemtableTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekOnMemtableCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekOnMemtableCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getNextOnMemtableCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getNextOnMemtableCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getPrevOnMemtableCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getPrevOnMemtableCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekChildSeekTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekChildSeekTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekChildSeekCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekChildSeekCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekMinHeapTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekMinHeapTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekMaxHeapTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekMaxHeapTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getSeekInternalSeekTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getSeekInternalSeekTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getFindNextUserEntryTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getFindNextUserEntryTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getWriteWalTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getWriteWalTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getWriteMemtableTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getWriteMemtableTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getWriteDelayTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getWriteDelayTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getWriteSchedulingFlushesCompactionsTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getWriteSchedulingFlushesCompactionsTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getWritePreAndPostProcessTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getWritePreAndPostProcessTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getWriteThreadWaitNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getWriteThreadWaitNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getDbMutexLockNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getDbMutexLockNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getDbConditionWaitNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getDbConditionWaitNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getMergeOperatorTimeNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getMergeOperatorTimeNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getReadIndexBlockNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getReadIndexBlockNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getReadFilterBlockNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getReadFilterBlockNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getNewTableBlockIterNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getNewTableBlockIterNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getNewTableIteratorNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getNewTableIteratorNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBlockSeekNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBlockSeekNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getFindTableNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getFindTableNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBloomMemtableHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBloomMemtableHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBloomMemtableMissCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBloomMemtableMissCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBloomSstHitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBloomSstHitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getBloomSstMissCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getBloomSstMissCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getKeyLockWaitTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getKeyLockWaitTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getKeyLockWaitCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getKeyLockWaitCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvNewSequentialFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvNewSequentialFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvNewRandomAccessFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvNewRandomAccessFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvNewWritableFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvNewWritableFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvReuseWritableFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvReuseWritableFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvNewRandomRwFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvNewRandomRwFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvNewDirectoryNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvNewDirectoryNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvFileExistsNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvFileExistsNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvGetChildrenNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvGetChildrenNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvGetChildrenFileAttributesNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvGetChildrenFileAttributesNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvDeleteFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvDeleteFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvCreateDirNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvCreateDirNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvCreateDirIfMissingNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvCreateDirIfMissingNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvDeleteDirNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvDeleteDirNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvGetFileSizeNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvGetFileSizeNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvGetFileModificationTimeNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvGetFileModificationTimeNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvRenameFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvRenameFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvLinkFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvLinkFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvLockFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvLockFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvUnlockFileNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvUnlockFileNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEnvNewLoggerNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEnvNewLoggerNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getGetCpuNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getGetCpuNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getIterNextCpuNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getIterNextCpuNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getIterPrevCpuNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getIterPrevCpuNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getIterSeekCpuNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getIterSeekCpuNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getEncryptDataNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getEncryptDataNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getDecryptDataNanos
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getDecryptDataNanos
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    getNumberAsyncSeek
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_PerfContext_getNumberAsyncSeek
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_PerfContext
 * Method:    toString
 * Signature: (JZ)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_rocksdb_PerfContext_toString
  (JNIEnv *, jobject, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif
