/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_OptimisticTransactionDB */

#ifndef _Included_org_rocksdb_OptimisticTransactionDB
#define _Included_org_rocksdb_OptimisticTransactionDB
#ifdef __cplusplus
extern "C" {
#endif
#undef org_rocksdb_OptimisticTransactionDB_NOT_FOUND
#define org_rocksdb_OptimisticTransactionDB_NOT_FOUND -1L
/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    disposeInternalJni
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_OptimisticTransactionDB_disposeInternalJni
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    open
 * Signature: (JLjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_OptimisticTransactionDB_open__JLjava_lang_String_2
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    open
 * Signature: (JLjava/lang/String;[[B[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_rocksdb_OptimisticTransactionDB_open__JLjava_lang_String_2_3_3B_3J
  (JNIEnv *, jclass, jlong, jstring, jobjectArray, jlongArray);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    closeDatabase
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_OptimisticTransactionDB_closeDatabase
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    beginTransaction
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_OptimisticTransactionDB_beginTransaction__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    beginTransaction
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_OptimisticTransactionDB_beginTransaction__JJJ
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    beginTransaction_withOld
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_OptimisticTransactionDB_beginTransaction_1withOld__JJJ
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    beginTransaction_withOld
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_OptimisticTransactionDB_beginTransaction_1withOld__JJJJ
  (JNIEnv *, jclass, jlong, jlong, jlong, jlong);

/*
 * Class:     org_rocksdb_OptimisticTransactionDB
 * Method:    getBaseDB
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_OptimisticTransactionDB_getBaseDB
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
