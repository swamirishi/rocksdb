/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_ReadOptions */

#ifndef _Included_org_rocksdb_ReadOptions
#define _Included_org_rocksdb_ReadOptions
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    newReadOptions
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_newReadOptions__
  (JNIEnv *, jclass);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    newReadOptions
 * Signature: (ZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_newReadOptions__ZZ
  (JNIEnv *, jclass, jboolean, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    copyReadOptions
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_copyReadOptions
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    disposeInternalJni
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_disposeInternalJni
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    asyncIo
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_asyncIo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setAsyncIo
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setAsyncIo
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    verifyChecksums
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_verifyChecksums
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setVerifyChecksums
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setVerifyChecksums
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    fillCache
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_fillCache
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setFillCache
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setFillCache
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    snapshot
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_snapshot
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setSnapshot
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setSnapshot
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    readTier
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_rocksdb_ReadOptions_readTier
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setReadTier
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setReadTier
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    tailing
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_tailing
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setTailing
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setTailing
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    managed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_managed
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setManaged
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setManaged
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    totalOrderSeek
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_totalOrderSeek
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setTotalOrderSeek
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setTotalOrderSeek
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    prefixSameAsStart
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_prefixSameAsStart
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setPrefixSameAsStart
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setPrefixSameAsStart
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    pinData
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_pinData
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setPinData
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setPinData
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    backgroundPurgeOnIteratorCleanup
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_backgroundPurgeOnIteratorCleanup
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setBackgroundPurgeOnIteratorCleanup
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setBackgroundPurgeOnIteratorCleanup
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    readaheadSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_readaheadSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setReadaheadSize
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setReadaheadSize
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    maxSkippableInternalKeys
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_maxSkippableInternalKeys
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setMaxSkippableInternalKeys
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setMaxSkippableInternalKeys
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    ignoreRangeDeletions
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_ignoreRangeDeletions
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setIgnoreRangeDeletions
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setIgnoreRangeDeletions
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setIterateUpperBound
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setIterateUpperBound
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    iterateUpperBound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_iterateUpperBound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setIterateLowerBound
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setIterateLowerBound
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    iterateLowerBound
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_iterateLowerBound
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setTableFilter
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setTableFilter
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    autoPrefixMode
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ReadOptions_autoPrefixMode
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setAutoPrefixMode
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setAutoPrefixMode
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    timestamp
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_timestamp
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setTimestamp
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setTimestamp
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    iterStartTs
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_iterStartTs
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setIterStartTs
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setIterStartTs
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    deadline
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_deadline
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setDeadline
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setDeadline
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    ioTimeout
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_ioTimeout
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setIoTimeout
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setIoTimeout
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    valueSizeSoftLimit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ReadOptions_valueSizeSoftLimit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ReadOptions
 * Method:    setValueSizeSoftLimit
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ReadOptions_setValueSizeSoftLimit
  (JNIEnv *, jclass, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
