/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_ComparatorOptions */

#ifndef _Included_org_rocksdb_ComparatorOptions
#define _Included_org_rocksdb_ComparatorOptions
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    newComparatorOptions
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_ComparatorOptions_newComparatorOptions
  (JNIEnv *, jclass);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    reusedSynchronisationType
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_rocksdb_ComparatorOptions_reusedSynchronisationType
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    setReusedSynchronisationType
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ComparatorOptions_setReusedSynchronisationType
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    useDirectBuffer
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_rocksdb_ComparatorOptions_useDirectBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    setUseDirectBuffer
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ComparatorOptions_setUseDirectBuffer
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    maxReusedBufferSize
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_ComparatorOptions_maxReusedBufferSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    setMaxReusedBufferSize
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ComparatorOptions_setMaxReusedBufferSize
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_rocksdb_ComparatorOptions
 * Method:    disposeInternalJni
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_ComparatorOptions_disposeInternalJni
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
