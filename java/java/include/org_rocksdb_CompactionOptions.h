/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_rocksdb_CompactionOptions */

#ifndef _Included_org_rocksdb_CompactionOptions
#define _Included_org_rocksdb_CompactionOptions
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    newCompactionOptions
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_CompactionOptions_newCompactionOptions
  (JNIEnv *, jclass);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    disposeInternalJni
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptions_disposeInternalJni
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    compression
 * Signature: (J)B
 */
JNIEXPORT jbyte JNICALL Java_org_rocksdb_CompactionOptions_compression
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    setCompression
 * Signature: (JB)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptions_setCompression
  (JNIEnv *, jclass, jlong, jbyte);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    outputFileSizeLimit
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_rocksdb_CompactionOptions_outputFileSizeLimit
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    setOutputFileSizeLimit
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptions_setOutputFileSizeLimit
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    maxSubcompactions
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_org_rocksdb_CompactionOptions_maxSubcompactions
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_rocksdb_CompactionOptions
 * Method:    setMaxSubcompactions
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_org_rocksdb_CompactionOptions_setMaxSubcompactions
  (JNIEnv *, jclass, jlong, jint);

#ifdef __cplusplus
}
#endif
#endif
